<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--指定properties文件的位置，从类路径根开始找文件-->
    <properties resource="jdbc.properties" />

    <!-- settings : 控制mybatis全局行为 -->
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <!-- 定义别名 -->
    <typeAliases>
        <!--
           第一种方式：
           可以指定一个类型一个自定义别名
           type:自定义类型的全限定名称
           alias:别名（短小， 容易记忆的）
         -->
        <typeAlias type="org.example.domain.Student" alias="stu" />
        
        <!--
          第二中方式
          <package> name是包名， 这个包中的所有类，类名就是别名（类名不区分大小写）
         -->
        <package name="com.example.domain"/>
    </typeAliases>

    <!--配置插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor"></plugin>
    </plugins>

    <environments default="mydev">
        <environment id="mydev">
            <!--
               transactionManager : mybatis的事务类型
                  type：JDBC（表示使用jdbc中的Connection对象的commit, rollback做事务处理)
            -->
            <transactionManager type="JDBC"/>
            <!--
              dataSource：表示数据源，连接数据库的
              type: 表示数据源类型， POOLED表示使用连接池
            -->
            <dataSource type="POOLED">
                <!--
                  driver, user, username, password是固定的，不能自定义
                -->

                <!-- 数据库的驱动类名 -->
                <property name="driver" value="${jdbc.driver}"/>
                <!-- 连接数据库的url字符串 -->
                <property name="url" value="${jdbc.url}"/>
                <!-- 访问数据库的用户名 -->
                <property name="username" value="${jdbc.user}"/>
                <!-- 密码 -->
                <property name="password" value="${jdbc.passwd}"/>
            </dataSource>
        </environment>

    </environments>

    <mappers>
        <mapper resource="org/example/dao/StudentDao.xml"/>
    </mappers>
</configuration>
